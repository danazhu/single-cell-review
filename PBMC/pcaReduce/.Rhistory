install.packages("~/Downloads/pcaReduce_1.0.tar.gz", repos = NULL, type = "source")
install.packages("pcaReduce")
install.packages("~/Downloads/pcaReduce_1.0.tar.gz", repos = NULL, type = "source")
.libPaths()
install.packages("~/Downloads/pcaReduce_1.0.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/pcaReduce_1.0.tar.gz", repos = NULL, type = "source")
installed.packages(c("pcaMethods", "mnormt", "mclust"))
installed.packages(c("pcaMethods", "mnormt", "mclust"))
installed.packages(c("pcaMethods", "mnormt", "mclust"))
installed.packages("pcaMethods")#))
install.packages("ggplot")
install.packages("ggplot2")
install.packages("pcaMethods")
install.packages("~/Downloads/pcaReduce_1.0.tar.gz", repos = NULL, type = "source")
install.packages("mnormt")
install.packages("~/Downloads/pcaReduce_1.0.tar.gz", repos = NULL, type = "source")
library("pcaReduce")
list.files()
library("pcaReduce")
tt = c()
DATASETS <- c("100", "1k")
for (ds in DATASETS) {
dataset <- read.table(paste0('A_', ds, '.txt'))
dataset <- as.matrix(dataset)
start_time <- Sys.time()
D <- log2(dataset + 1)
Input <- t(D)
start_time <- Sys.time()
Output_S <- PCAreduce(Input, nbt=1, q=9, method='S')
end_time <- Sys.time()
t = end_time - start_time
print(t)
write.csv(Output_S[1], sprintf(paste0("pca_output_", ds, ".txt")));
}
View(Output_S)
#!/usr/bin/env Rscript
library("pcaReduce")
tt = c()
DATASETS <- c("100", "1k")
for (ds in DATASETS) {
dataset <- read.table(paste0('A_', ds, '.txt'))
dataset <- as.matrix(dataset)
start_time <- Sys.time()
D <- log2(dataset + 1)
Input <- t(D)
start_time <- Sys.time()
Output_S <- PCAreduce(Input, nbt=1, q=9, method='S')
end_time <- Sys.time()
t = end_time - start_time
print("This iteration took ", t, "for .txt with ", ds, "entries")
write.csv(Output_S[1], sprintf(paste0("pca_output_", ds, ".txt")));
}
#!/usr/bin/env Rscript
library("pcaReduce")
tt = c()
DATASETS <- c("100", "1k")
for (ds in DATASETS) {
dataset <- read.table(paste0('A_', ds, '.txt'))
dataset <- as.matrix(dataset)
start_time <- Sys.time()
D <- log2(dataset + 1)
Input <- t(D)
start_time <- Sys.time()
Output_S <- PCAreduce(Input, nbt=1, q=9, method='S')
end_time <- Sys.time()
t = end_time - start_time
print(c("This iteration took ", t, "for the file with ", ds, " entries"))
write.csv(Output_S[1], sprintf(paste0("pca_output_", ds, ".txt")));
}
#!/usr/bin/env Rscript
library("pcaReduce")
tt = c()
DATASETS <- c("100", "1k")
for (ds in DATASETS) {
dataset <- read.table(paste0('A_', ds, '.txt'))
dataset <- as.matrix(dataset)
start_time <- Sys.time()
D <- log2(dataset + 1)
Input <- t(D)
start_time <- Sys.time()
Output_S <- PCAreduce(Input, nbt=1, q=9, method='S')
end_time <- Sys.time()
t = end_time - start_time
print(c(t, ds))
write.csv(Output_S[1], sprintf(paste0("pca_output_", ds, ".txt")));
}
#!/usr/bin/env Rscript
library("pcaReduce")
tt = c()
DATASETS <- c("100", "1k")
for (ds in DATASETS) {
dataset <- read.table(paste0('A_', ds, '.txt'))
dataset <- as.matrix(dataset)
start_time <- Sys.time()
D <- log2(dataset + 1)
Input <- t(D)
start_time <- Sys.time()
Output_S <- PCAreduce(Input, nbt=1, q=9, method='S')
end_time <- Sys.time()
t = end_time - start_time
print(t)
write.csv(Output_S[1], sprintf(paste0("pca_output_", ds, ".txt")));
}
#!/usr/bin/env Rscript
library("pcaReduce")
tt = c()
DATASETS <- c("100", "1k")
for (ds in DATASETS) {
dataset <- read.table(paste0('A_', ds, '.txt'))
dataset <- as.matrix(dataset)
start_time <- Sys.time()
D <- log2(dataset + 1)
Input <- t(D)
start_time <- Sys.time()
Output_S <- PCAreduce(Input, nbt=1, q=9, method='S')
end_time <- Sys.time()
t = end_time - start_time
print(t)
write.csv(Output_S[1], sprintf(paste0("pca_output_", ds, ".txt")));
}
