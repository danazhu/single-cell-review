install.packages('microbiome')
BiocManager::install("microbiome")
library(microbiome)
version
library(microbiome)
data('atlas1006')
microbiome_counts <- atlas1006@otu_table@.Data
microbiome_counts <- t(microbiome_counts)
means <- apply(mean, microbiome_counts)
microbiome_means <- apply(microbiome_counts, mean)
microbiome_var <- apply(microbiome_counts, var)
colnames(microbiome_counts)
microbiome_means <- apply(microbiome_counts, fun = mean)
microbiome_var <- apply(microbiome_counts, fun = var)
microbiome_means <- apply(microbiome_counts, FUN = mean)
microbiome_var <- apply(microbiome_counts, FUN = var)
View(microbiome_counts)
microbiome_means <- apply(microbiome_counts,MARGIN = 1 ,FUN = mean) #Calculate the mean count for each row
microbiome_var <- apply(microbiome_counts,MARGIN = 1, FUN = var) #Calculate the variance of counts for each row
plot(microbiome_means, microbiome_var)
View(atlas1006)
colnames(atlas1006)
View(atlas1006)
microbiome_counts_gender <- microbiome_counts
#alternate gender assignments for each sample as Male, Female
for(i in 1:nrow(microbiome_counts_gender)){
microbiome_counts_gender$gender <- ifelse(i %% 2 == 0, 'Male', 'Female')
}
#alternate gender assignments for each sample as Male, Female
for(i in 1:nrow(microbiome_counts_gender)){
microbiome_counts_gender[i]$gender <- ifelse((i %% 2) == 0, 'Male', 'Female')
}
microbiome_counts_gender <- data.frame(microbiome_counts)
ple as Male, Female
for(i in 1:nrow(microbiome_counts_gender)){
microbiome_counts_gender[i]$gender <- ifelse((i %% 2) == 0, 'Male', 'Female')
}
microbiome_counts_gender <- data.frame(microbiome_counts)
#alternate gender assignments for each sample as Male, Female
for(i in 1:nrow(microbiome_counts_gender)){
microbiome_counts_gender[i, 'gender'] <- ifelse((i %% 2) == 0, 'Male', 'Female')
}
View(microbiome_counts_gender)
p_vals <- vector(mode = 'numeric', length = 130)
for (i in 1:130){
current_test <- t.test(microbiome_counts_gender[,i] ~ gender)
p_vals[i] <- current_test$p.value
}
microbiome_counts_gender <- data.frame(microbiome_counts)
#alternate gender assignments for each sample as Male, Female
for(i in 1:nrow(microbiome_counts_gender)){
microbiome_counts_gender[i, 'gender'] <- ifelse((i %% 2) == 0, 'Male', 'Female')
}
p_vals <- vector(mode = 'numeric', length = 130)
for (i in 1:130){
current_test <- t.test(microbiome_counts_gender[,i] ~ gender)
p_vals[i] <- current_test$p.value
}
#d
microbiome_counts_gender <- data.frame(microbiome_counts)
#alternate gender assignments for each sample as Male, Female
for(i in 1:nrow(microbiome_counts_gender)){
microbiome_counts_gender[i, 'gender'] <- ifelse((i %% 2) == 0, 'Male', 'Female')
}
p_vals <- vector(mode = 'numeric', length = 130)
for (i in 1:130){
current_test <- t.test(microbiome_counts_gender[,i] ~ microbiome_counts_gender[,'gender'])
p_vals[i] <- current_test$p.value
}
#d
microbiome_counts_gender <- data.frame(microbiome_counts)
#alternate gender assignments for each sample as Male, Female
for(i in 1:nrow(microbiome_counts_gender)){
microbiome_counts_gender[i, 'gender'] <- ifelse((i %% 2) == 0, 'Male', 'Female')
}
p_vals <- vector(mode = 'numeric', length = 130)
for (i in 1:130){
current_test <- t.test(microbiome_counts_gender[,i] ~ microbiome_counts_gender$gender)
p_vals[i] <- current_test$p.value
}
p_vals
p_vals[p_vals < 0.05]
library(microbiome)
data('atlas1006')
microbiome_counts <- atlas1006@otu_table@.Data
microbiome_counts <- t(microbiome_counts)
#a
microbiome_means <- apply(microbiome_counts,MARGIN = 1 ,FUN = mean) #Calculate the mean count for each sample
#b
microbiome_var <- apply(microbiome_counts,MARGIN = 1, FUN = var) #Calculate the variance of counts for each sample
#c
plot(microbiome_means, microbiome_var)
gender <- atlas1006@sam_data$gender
microbiome_counts_gender <- data.frame(microbiome_counts, gender)
View(microbiome_counts_gender)
gender <- atlas1006@sam_data$gender
microbiome_counts_gender <- data.frame(microbiome_counts, gender)
p_vals <- vector(mode = 'numeric', length = 130)
for (i in 1:130){
current_test <- t.test(microbiome_counts_gender[,i] ~ gender)
p_vals[i] <- current_test$p.value
}
p_vals[p_vals < 0.05]
#!/usr/bin/env Rscript
library("pcaReduce")
tt = c()
DATASETS <- c("100", "1k")
TRIALS <- c(1:5)
for (ds in DATASETS) {
dataset <- read.table(paste0('A_', ds, '.txt'))
dataset <- as.matrix(dataset)
write.table(paste0("ari values for ", ds, " sample size"), "pca_ari_time_output.txt", append = TRUE, sep = "\n", col.names = FALSE, row.names = FALSE)
for (num in TRIALS) {
D <- log2(dataset + 1)
Input <- t(D)
start_time <- Sys.time()
Output_S <- PCAreduce(Input, nbt=1, q=9, method='S')
end_time <- Sys.time()
t = end_time - start_time
# TODO: calculate ari values
# record time spent
write.table(end_time - start_time, "pca_ari_time_output.txt", append = TRUE, sep="\n", col.names = FALSE, row.names = FALSE)
write.csv(Output_S[1], sprintf(paste0("pca_output_", ds, "_", num, ".txt")));
}
}
list.files
list.files()
list.files()
setwd("~/Desktop/GroupProject/single-cell-review/PBMC/pcaReduce")
list.files()
#!/usr/bin/env Rscript
library("pcaReduce")
tt = c()
DATASETS <- c("100", "1k")
TRIALS <- c(1:5)
for (ds in DATASETS) {
dataset <- read.table(paste0('A_', ds, '.txt'))
dataset <- as.matrix(dataset)
write.table(paste0("ari values for ", ds, " sample size"), "pca_ari_time_output.txt", append = TRUE, sep = "\n", col.names = FALSE, row.names = FALSE)
for (num in TRIALS) {
D <- log2(dataset + 1)
Input <- t(D)
start_time <- Sys.time()
Output_S <- PCAreduce(Input, nbt=1, q=9, method='S')
end_time <- Sys.time()
t = end_time - start_time
# TODO: calculate ari values
# record time spent
write.table(end_time - start_time, "pca_ari_time_output.txt", append = TRUE, sep="\n", col.names = FALSE, row.names = FALSE)
write.csv(Output_S[1], sprintf(paste0("pca_output_", ds, "_", num, ".txt")));
}
}
